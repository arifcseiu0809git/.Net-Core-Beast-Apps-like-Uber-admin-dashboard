<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Address_InvalidId" xml:space="preserve">
    <value>Invalid address id: {0}.</value>
  </data>
  <data name="Address_InvalidPageNumber" xml:space="preserve">
    <value>Invalid address page number: {0}.</value>
  </data>
  <data name="Address_Mismatch" xml:space="preserve">
    <value>Address Id mismatch.</value>
  </data>
  <data name="Address_NotFoundId" xml:space="preserve">
    <value>No addreess found with id: {0}.</value>
  </data>
  <data name="Address_NotFoundList" xml:space="preserve">
    <value>No address found.</value>
  </data>
  <data name="Address_Null" xml:space="preserve">
    <value>Address is null.</value>
  </data>
  <data name="ApplicationLog_InvalidId" xml:space="preserve">
    <value>Invalid application log id: {0}.</value>
  </data>
  <data name="ApplicationLog_InvalidId1" xml:space="preserve">
    <value>Invalid application log id: {0}.</value>
  </data>
  <data name="ApplicationLog_InvalidPageNumber" xml:space="preserve">
    <value>Invalid application log page number: {0}.</value>
  </data>
  <data name="ApplicationLog_InvalidPageNumber1" xml:space="preserve">
    <value>Invalid application log page number: {0}.</value>
  </data>
  <data name="ApplicationLog_NotFoundId" xml:space="preserve">
    <value>No application log found with id: {0}.</value>
  </data>
  <data name="ApplicationLog_NotFoundId1" xml:space="preserve">
    <value>No application log found with id: {0}.</value>
  </data>
  <data name="ApplicationLog_NotFoundList" xml:space="preserve">
    <value>No application logs found.</value>
  </data>
  <data name="ApplicationLog_NotFoundList1" xml:space="preserve">
    <value>No application logs found.</value>
  </data>
  <data name="ApplicationLog_Null" xml:space="preserve">
    <value>Application log is null.</value>
  </data>
  <data name="ApplicationLog_Null1" xml:space="preserve">
    <value>Application log is null.</value>
  </data>
  <data name="AuditLog_InvalidId" xml:space="preserve">
    <value>Invalid audit log id: {0}.</value>
  </data>
  <data name="AuditLog_InvalidId1" xml:space="preserve">
    <value>Invalid audit log id: {0}.</value>
  </data>
  <data name="AuditLog_InvalidPageNumber" xml:space="preserve">
    <value>Invalid audit log page number: {0}.</value>
  </data>
  <data name="AuditLog_InvalidPageNumber1" xml:space="preserve">
    <value>Invalid audit log page number: {0}.</value>
  </data>
  <data name="AuditLog_NotFoundId" xml:space="preserve">
    <value>No audit log found with id: {0}.</value>
  </data>
  <data name="AuditLog_NotFoundId1" xml:space="preserve">
    <value>No audit log found with id: {0}.</value>
  </data>
  <data name="AuditLog_NotFoundList" xml:space="preserve">
    <value>No audit logs found.</value>
  </data>
  <data name="AuditLog_NotFoundList1" xml:space="preserve">
    <value>No audit logs found.</value>
  </data>
  <data name="AuditLog_Null" xml:space="preserve">
    <value>Audit log is null.</value>
  </data>
  <data name="AuditLog_Null1" xml:space="preserve">
    <value>Audit log is null.</value>
  </data>
  <data name="Auth_ExpiredRefreshToken" xml:space="preserve">
    <value>Refresh token expired.</value>
  </data>
  <data name="Auth_InvalidRefreshToken" xml:space="preserve">
    <value>Invalid refresh token.</value>
  </data>
  <data name="Auth_LoginNull" xml:space="preserve">
    <value>User login information is null.</value>
  </data>
  <data name="Auth_LoginNull1" xml:space="preserve">
    <value>User login information is null.</value>
  </data>
  <data name="Auth_UserInfoNull" xml:space="preserve">
    <value>User information is null.</value>
  </data>
  <data name="Auth_UserInfoNull1" xml:space="preserve">
    <value>User information is null.</value>
  </data>
  <data name="Category_Duplicate" xml:space="preserve">
    <value>The category '{0}' already exists.</value>
  </data>
  <data name="Category_Duplicate1" xml:space="preserve">
    <value>The category '{0}' already exists.</value>
  </data>
  <data name="Category_InvalidId" xml:space="preserve">
    <value>Invalid category id: {0}.</value>
  </data>
  <data name="Category_InvalidId1" xml:space="preserve">
    <value>Invalid category id: {0}.</value>
  </data>
  <data name="Category_InvalidPageNumber" xml:space="preserve">
    <value>Invalid category page number: {0}.</value>
  </data>
  <data name="Category_InvalidPageNumber1" xml:space="preserve">
    <value>Invalid category page number: {0}.</value>
  </data>
  <data name="Category_Mismatch" xml:space="preserve">
    <value>Category Id mismatch.</value>
  </data>
  <data name="Category_Mismatch1" xml:space="preserve">
    <value>Category Id mismatch.</value>
  </data>
  <data name="Category_NotFoundGetCategoriesWithPies" xml:space="preserve">
    <value>No data found for GetCategoriesWithPies.</value>
  </data>
  <data name="Category_NotFoundGetCategoriesWithPies1" xml:space="preserve">
    <value>No data found for GetCategoriesWithPies.</value>
  </data>
  <data name="Category_NotFoundId" xml:space="preserve">
    <value>No category found with id: {0}.</value>
  </data>
  <data name="Category_NotFoundId1" xml:space="preserve">
    <value>No category found with id: {0}.</value>
  </data>
  <data name="Category_NotFoundList" xml:space="preserve">
    <value>No categories found.</value>
  </data>
  <data name="Category_NotFoundList1" xml:space="preserve">
    <value>No categories found.</value>
  </data>
  <data name="Category_Null" xml:space="preserve">
    <value>Category is null.</value>
  </data>
  <data name="Category_Null1" xml:space="preserve">
    <value>Category is null.</value>
  </data>
  <data name="Coupon_InvalidId" xml:space="preserve">
    <value>Invalid coupon id: {0}.</value>
  </data>
  <data name="Coupon_InvalidPageNumber" xml:space="preserve">
    <value>Invalid coupon page number: {0}.</value>
  </data>
  <data name="Coupon_Mismatch" xml:space="preserve">
    <value>Coupon Id mismatch.</value>
  </data>
  <data name="Coupon_NotFoundId" xml:space="preserve">
    <value>No coupon found with id: {0}.</value>
  </data>
  <data name="Coupon_NotFoundList" xml:space="preserve">
    <value>No coupon found.</value>
  </data>
  <data name="Coupon_Null" xml:space="preserve">
    <value>Coupon is null.</value>
  </data>
  <data name="EmailTemplate_InvalidId" xml:space="preserve">
    <value>Invalid email template id: {0}.</value>
  </data>
  <data name="EmailTemplate_InvalidId1" xml:space="preserve">
    <value>Invalid email template id: {0}.</value>
  </data>
  <data name="EmailTemplate_InvalidPageNumber" xml:space="preserve">
    <value>Invalid email template page number: {0}.</value>
  </data>
  <data name="EmailTemplate_InvalidPageNumber1" xml:space="preserve">
    <value>Invalid email template page number: {0}.</value>
  </data>
  <data name="EmailTemplate_Mismatch" xml:space="preserve">
    <value>Email Template Id mismatch.</value>
  </data>
  <data name="EmailTemplate_Mismatch1" xml:space="preserve">
    <value>Email Template Id mismatch.</value>
  </data>
  <data name="EmailTemplate_NotFoundId" xml:space="preserve">
    <value>No email template found with id: {0}.</value>
  </data>
  <data name="EmailTemplate_NotFoundId1" xml:space="preserve">
    <value>No email template found with id: {0}.</value>
  </data>
  <data name="EmailTemplate_NotFoundList" xml:space="preserve">
    <value>No email template found.</value>
  </data>
  <data name="EmailTemplate_NotFoundList1" xml:space="preserve">
    <value>No email template found.</value>
  </data>
  <data name="EmailTemplate_NotFoundName" xml:space="preserve">
    <value>No email template found with name: {0}.</value>
  </data>
  <data name="EmailTemplate_NotFoundName1" xml:space="preserve">
    <value>No email template found with name: {0}.</value>
  </data>
  <data name="EmailTemplate_Null" xml:space="preserve">
    <value>EmailTemplate is null.</value>
  </data>
  <data name="EmailTemplate_Null1" xml:space="preserve">
    <value>EmailTemplate is null.</value>
  </data>
  <data name="InvalidHash" xml:space="preserve">
    <value>Invalid hash provided.</value>
  </data>
  <data name="MobileAuth_ChangePasswordNull" xml:space="preserve">
    <value>Change password information is null.</value>
  </data>
  <data name="MobileAuth_ChangePasswordNull1" xml:space="preserve">
    <value>Change password information is null.</value>
  </data>
  <data name="MobileAuth_RegisterNull" xml:space="preserve">
    <value>User registration information is null.</value>
  </data>
  <data name="MobileAuth_RegisterNull1" xml:space="preserve">
    <value>User registration information is null.</value>
  </data>
  <data name="Payment_Method_NotFound" xml:space="preserve">
    <value>No payment method found</value>
  </data>
  <data name="Payment_Options_NotFound" xml:space="preserve">
    <value>No payment option found </value>
  </data>
  <data name="Pie_Duplicate" xml:space="preserve">
    <value>The pie '{0}' already exists.</value>
  </data>
  <data name="Pie_Duplicate1" xml:space="preserve">
    <value>The pie '{0}' already exists.</value>
  </data>
  <data name="Pie_InvalidCategoryId" xml:space="preserve">
    <value>Invalid pie category id: {0}.</value>
  </data>
  <data name="Pie_InvalidCategoryId1" xml:space="preserve">
    <value>Invalid pie category id: {0}.</value>
  </data>
  <data name="Pie_InvalidId" xml:space="preserve">
    <value>Invalid pie id: {0}.</value>
  </data>
  <data name="Pie_InvalidId1" xml:space="preserve">
    <value>Invalid pie id: {0}.</value>
  </data>
  <data name="Pie_InvalidPageNumber" xml:space="preserve">
    <value>Invalid pie page number: {0}.</value>
  </data>
  <data name="Pie_InvalidPageNumber1" xml:space="preserve">
    <value>Invalid pie page number: {0}.</value>
  </data>
  <data name="Pie_Mismatch" xml:space="preserve">
    <value>Pie Id mismatch.</value>
  </data>
  <data name="Pie_Mismatch1" xml:space="preserve">
    <value>Pie Id mismatch.</value>
  </data>
  <data name="Pie_NotFoundCategoryId" xml:space="preserve">
    <value>No pie found with category id: {0}.</value>
  </data>
  <data name="Pie_NotFoundCategoryId1" xml:space="preserve">
    <value>No pie found with category id: {0}.</value>
  </data>
  <data name="Pie_NotFoundId" xml:space="preserve">
    <value>No pie found with id: {0}.</value>
  </data>
  <data name="Pie_NotFoundId1" xml:space="preserve">
    <value>No pie found with id: {0}.</value>
  </data>
  <data name="Pie_NotFoundList" xml:space="preserve">
    <value>No pies found.</value>
  </data>
  <data name="Pie_NotFoundList1" xml:space="preserve">
    <value>No pies found.</value>
  </data>
  <data name="Pie_Null" xml:space="preserve">
    <value>Pie is null.</value>
  </data>
  <data name="Pie_Null1" xml:space="preserve">
    <value>Pie is null.</value>
  </data>
</root>